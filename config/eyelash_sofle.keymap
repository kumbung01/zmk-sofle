#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    combos {
        compatible = "zmk,combos";

        lang {
            bindings = <&kp RALT>;
            key-positions = <34 35>;
            layers = <0 3>;
            timeout-ms = <70>;
        };
    };

    macros {
        arrow: arrow {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp MINUS &kp GT>;
            label = "ARROW";
        };

        arrow2: arrow2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp EQUAL &kp GT>;
            label = "ARROW2";
        };

        layer_shift: layer_shift {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LSHFT &mo 2>;
            label = "LAYER_SHIFT";
        };
    };

    behaviors {
    };

    keymap {
        compatible = "zmk,keymap";

        BASE {
            bindings = <
&kp ESC        &kp N1    &kp N2  &kp N3     &kp N4     &kp N5       &tog 3           &kp N6      &kp N7           &kp N8     &kp N9   &kp N0    &kp BACKSLASH
&mt LSHFT TAB  &kp Q     &kp W   &kp E      &kp R      &kp T        &tog 5           &kp Y       &kp U            &kp I      &kp O    &kp P     &kp BACKSPACE
&mo 1          &kp A     &kp S   &kp D      &kp F      &kp G        &kp LEFT_ARROW   &kp H       &kp J            &kp K      &kp L    &kp SEMI  &kp APOS
&mo 2          &kp Z     &kp X   &kp C      &kp V      &kp B        &kp RIGHT_ARROW  &kp N       &kp M            &kp COMMA  &kp DOT  &kp FSLH  &trans
&kp F11        &kp LALT  &mo 5   &kp SPACE  &kp UNDER  &kp LCTRL    &kp ENTER        &kp ESCAPE  &sk RIGHT_SHIFT  &kp ENTER  &mo 4    &kp RGUI
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = " BASE";
        };

        SYM1 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans           &trans         &trans                &trans                 &trans     &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp CARET        &kp AMPERSAND  &kp ASTRK             &kp PIPE               &arrow     &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp EXCLAMATION  &kp PLUS       &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp EQUAL  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp TILDE        &kp MINUS      &kp LESS_THAN         &kp GREATER_THAN       &kp FSLH   &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans           &caps_word     &trans                &trans                 &trans
            >;

            label = "SYM1";
        };

        SYM2 {
            bindings = <
&trans  &trans      &trans  &trans  &trans  &trans    &trans  &trans      &trans       &trans    &trans           &trans        &trans
&trans  &trans      &trans  &trans  &trans  &trans    &trans  &trans      &kp PERCENT  &trans    &trans           &arrow2       &trans
&trans  &trans      &trans  &trans  &trans  &trans    &trans  &kp DOLLAR  &kp HASH     &kp LBKT  &kp RBKT         &kp COLON     &kp DOUBLE_QUOTES
&trans  &kp DELETE  &trans  &trans  &trans  &trans    &trans  &kp GRAVE   &kp AT_SIGN  &kp LBRC  &kp RIGHT_BRACE  &kp QUESTION  &kp FSLH
&trans  &trans      &trans  &trans  &trans  &trans    &trans  &trans      &trans       &trans    &trans           &trans
            >;

            label = "SYM2";
        };

        GAME {
            bindings = <
&trans     &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&kp TAB    &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&kp B      &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&kp LSHFT  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans     &trans  &trans  &trans  &kp C   &trans    &trans  &trans  &trans  &trans  &trans  &trans
            >;

            label = "GAME";
        };

        NUM {
            bindings = <
&trans  &trans        &trans      &trans         &trans        &trans           &trans  &trans         &trans        &trans        &trans        &trans        &trans
&trans  &kp LS(EXCL)  &kp LS(AT)  &kp LS(POUND)  &kp LS(DLLR)  &kp LS(PRCNT)    &trans  &kp LS(CARET)  &kp LS(AMPS)  &kp LS(STAR)  &kp LS(LPAR)  &kp LS(RPAR)  &trans
&trans  &kp N1        &kp N2      &kp N3         &kp N4        &kp N5           &trans  &kp N6         &kp N7        &kp N8        &kp N9        &kp N0        &trans
&trans  &trans        &trans      &trans         &trans        &trans           &trans  &trans         &trans        &trans        &trans        &trans        &trans
&trans  &trans        &trans      &trans         &trans        &trans           &trans  &trans         &trans        &trans        &trans        &trans
            >;

            label = "NUM";
        };

        FUNC {
            bindings = <
&kp GRAVE   &kp F1           &kp F2          &kp F3           &kp F4           &kp F5             &mmv MOVE_UP     &kp F6           &kp F7           &kp F8      &kp F9     &kp F10           &kp F11
&trans      &kp GRAVE        &mkp LCLK       &mkp MCLK        &mkp RCLK        &mkp MB4           &trans           &kp PG_UP        &kp HOME         &kp UP      &kp END    &kp MINUS         &kp F12
&trans      &kp TILDE        &trans          &trans           &trans           &mkp MB5           &mmv MOVE_LEFT   &kp PG_DN        &kp LEFT         &kp DOWN    &kp RIGHT  &kp LEFT_BRACKET  &kp RIGHT_BRACKET
&trans      &rgb_ug RGB_OFF  &rgb_ug RGB_ON  &rgb_ug RGB_EFF  &rgb_ug RGB_EFR  &rgb_ug RGB_SPI    &mmv MOVE_RIGHT  &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &kp INSERT  &kp F11    &kp F12           &trans
&kp C_MUTE  &trans           &trans          &trans           &trans           &trans             &mkp LCLK        &trans           &trans           &trans      &trans     &trans
            >;

            display-name = "FUNC";
            sensor-bindings = <&scroll_encoder>;
        };
    };
};
